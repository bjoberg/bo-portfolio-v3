# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  setup:
    docker:
      # specify the node version
      - image: circleci/node:11.1.0-browsers

    working_directory: ~/brettoberg.com

    steps:
      - checkout

      # Update npm to the latest version
      - run:
          name: Update npm 
          command: sudo npm install -g npm@latest

      # Download and cache dependencies
      - restore_cache:
          keys:
          - dependency-cache-{{ checksum "package.json" }}

      # Change npm's default directory: https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally
      - run: mkdir ~/.npm-global
      - run: npm config set prefix '~/.npm-global'
      - run: echo "export PATH=~/.npm-global/bin:$PATH" >> ~/.profile
      - run: source ~/.profile

      # Install dependencies that were not cached
      - run:
          name: Install npm
          command: npm install

      # Save new / updated dependencies
      - save_cache:
          paths:
            - node_modules
          key: dependency-cache-{{ checksum "package.json" }}

  test:
    docker:
      # specify the node version
      - image: circleci/node:11.1.0-browsers

    working_directory: ~/brettoberg.com

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - dependency-cache-{{ checksum "package.json" }}

      # Run the unit tests
      - run:
          name: Run unit tests
          command: npm run test

      # Run the lint tests
      - run:
          name: Run lint tests
          command: npm run lint

  build:
    docker:
      # specify the node version
      - image: circleci/node:11.1.0-browsers

    working_directory: ~/brettoberg.com

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - dependency-cache-{{ checksum "package.json" }}

      # Build the application (Angular Universal)
      - run:
          name: Build application
          command: npm run build:universal

  deploy:
    working_directory: ~/brettoberg.com
    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  default_workflow:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - build:
          requires:
            - setup
            - test
      - deploy:
          requires:
            - setup
            - test
            - build
          # filters:
          #   branches:
          #     only:
          #       - master

